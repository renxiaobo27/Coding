Given an input string, reverse the string word by word. A word is defined as a sequence of non-space characters.

The input string does not contain leading or trailing spaces and the words are always separated by a single space.

For example,
Given s = "the sky is blue",
return "blue is sky the".

Could you do it in-place without allocating extra space?



public class Solution {
    public void reverseWords(char[] s) {
        if(s==null || s.length<=1)
            return ;
        int len = s.length-1;
        reverse(s,0,len);
        
        int start = 0;
        for(int i=0;i<s.length;i++)
        {
            if(s[i]==' ')
            {
                reverse(s,start,i-1);
                start = i+1;
            }
        }
        reverse(s,start,len);
        
    }
    
    public void reverse(char []s,int i,int j)
    {
        char tmp;
        while(i<j)
        {
            tmp =s[i];
            s[i] = s[j];
            s[j] = tmp;
            i++;
            j--;
        }
    }
}
