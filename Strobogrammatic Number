A strobogrammatic number is a number that looks the same when rotated 180 degrees (looked at upside down).

Write a function to determine if a number is strobogrammatic. The number is represented as a string.

For example, the numbers "69", "88", and "818" are all strobogrammatic.


public class Solution {
    public boolean isStrobogrammatic(String num) {
        if(num==null || num.length()==0)
            return true;
        HashMap<Character,Character>map = new HashMap<Character,Character>();
        map.put('6','9');
        map.put('9','6');
        map.put('0','0');
        map.put('8','8');
        map.put('1','1');
        int i=0;
        int j=num.length()-1;
        while(i<=j)
        {
            char c1 = num.charAt(i);
            char c2 = num.charAt(j);
             // 如果字母不存在映射或映射不对，则返回假
            if(!map.containsKey(c1) || c2!=map.get(c1))
                return false;
            i++;
            j--;
        }
        return true;
    }
}


