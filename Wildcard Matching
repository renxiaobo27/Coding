Implement wildcard pattern matching with support for '?' and '*'.

'?' Matches any single character.
'*' Matches any sequence of characters (including the empty sequence).

The matching should cover the entire input string (not partial).

The function prototype should be:
bool isMatch(const char *s, const char *p)

Some examples:
isMatch("aa","a") → false
isMatch("aa","aa") → true
isMatch("aaa","aa") → false
isMatch("aa", "*") → true
isMatch("aa", "a*") → true
isMatch("ab", "?*") → true
isMatch("aab", "c*a*b") → false

public class Solution {
    public boolean isMatch(String s, String p) {
        int ps = 0;
        int pp = 0;
        int pstar = -1;
        int pIns = -1;
        
        while(ps<s.length())
        {
            if(pp<p.length() && (s.charAt(ps)==p.charAt(pp) || p.charAt(pp)=='?'))
            {
                ps++;
                pp++;
            }
            else if(pp<p.length() && p.charAt(pp)=='*')
            {
                pstar = pp;
                pp++;
                pIns = ps;
            }
            else if(pstar!=-1)
            {
                pp = pstar+1;
                ps = ++pIns;
            }
            else
            {
                return false;
            }
        }
        
        while(pp<p.length() && p.charAt(pp)=='*')
        {
            pp++;
        }
        
        return pp==p.length();
    }
}
